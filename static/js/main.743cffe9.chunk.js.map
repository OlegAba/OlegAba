{"version":3,"sources":["styles/GlobalStyles.js","styles/Themes.js","styles/Device.js","Data.js","components/navbar/Navbar.styled.js","components/navLink/NavLink.styled.js","components/navLink/NavLink.js","components/navSwitch/NavSwitch.styled.js","components/navSwitch/NavSwitch.js","components/navbar/Navbar.js","components/menu/Menu.styled.js","components/menu/Menu.js","components/OutsideAlerter.js","components/about/About.styled.js","components/about/About.js","components/mainProject/MainProject.styled.js","components/mainProject/MainProject.js","components/otherProjects/OtherProjects.styled.js","components/otherProjects/OtherProjects.js","components/footer/Footer.styled.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","background","body","title","device","tablet","accent","secondaryBackground","mobileL","lightTheme","button","buttonHover","backgroundActive","secondaryAccent","darkTheme","size","mobileS","mobileM","laptop","laptopL","desktop","desktopL","socialLinks","icon","FaGithub","url","FaLinkedinIn","MdEmail","IoMdDocument","about","image","source","description","instaQR","mainImage","secondaryImages","learned","appleLink","githubLink","projects","StyledNavbar","styled","nav","StyledNavLink","a","hasTitle","NavLink","Icon","props","undefined","className","StyledNavSwitch","div","NavSwitch","isDarkMode","onChange","type","id","checked","htmlFor","Navbar","logo","links","isMobile","onSwitchChange","onButtonClick","navLogo","src","alt","navLinkButtons","map","link","index","key","href","target","rel","navToggle","navButton","onClick","expandedNavbar","currentNavbar","StyledMenu","open","Menu","isHidden","aria-hidden","OutsideAlerter","setWrapperRef","bind","handleClickOutside","document","addEventListener","this","removeEventListener","node","wrapperRef","event","contains","ref","children","Component","StyledAbout","About","StyledMainProject","MainProject","project","handleImageClick","imageGrid","learnedSection","text","StyledOtherProjects","OtherProjects","StyledFooter","footer","Footer","copyright","App","updateWidth","window","innerWidth","menuOpen","state","setState","handleThemeSwitch","handleMenuButton","handleCloseButton","imageDisplayOpen","imageIndex","images","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.743cffe9.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing:border-box; \n    -moz-box-sizing:border-box; \n    -webkit-box-sizing:border-box; \n    -ms-box-sizing:border-box;\n  }\n\n  body {\n    background: ${({ theme }) => theme.background};\n    color: ${({ theme }) => theme.body};\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n    transition: background 0.2s linear;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    color: ${({ theme }) => theme.title};\n  }\n\n  h1 {\n    font-size: 62px;\n    text-align: center;\n    position: relative;\n    z-index: 2;\n    margin-bottom: -40px;\n  }\n\n  @media ${({ device }) => device.tablet} {\n    h1 {\n      margin-bottom: -25px;\n      font-size: 40px;\n    }\n  }\n\n  h4 {\n    font-size: 18px;\n    padding-tip: 10px;\n    padding-bottom: 10px;\n  }\n\n  p {\n    font-size: 16px;\n    line-height: 30px;\n    font-weight: 300;\n  }\n\n  ul {\n    display: block;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 40px;\n    margin-top: 5px;\n    line-height: 1.5;\n\n    li {\n      font-size: 16px;\n      margin-bottom: 6px;\n      padding-top: 6px;\n      padding-bottom: 6px;\n      padding-left: 12px;\n      color: ${({ theme }) => theme.accent};\n\n      span {\n        color: ${({ theme }) => theme.body};\n      }\n    }\n  }\n\n  .max-width-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 24px 0 24px;\n  }\n\n  .section-container {\n    padding-top: 80px;\n    padding-bottom: 36px;\n  }\n\n  .projects-container {\n    margin-top: 80px;\n  }\n\n  .footer-container {\n    margin-top: 80px;\n  }\n\n  .box-section {\n    background-color: ${({ theme }) => theme.secondaryBackground};\n    border-radius: 2px;\n  }\n\n  .image-container {\n    padding-top: 80px;\n    padding-bottom: 80px;\n\n    img {\n      display: block;\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n\n  .grid-column {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    padding: 48px;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    -webkit-box-pack: justify;\n    -webkit-justify-content: space-between;\n    -ms-flex-pack: justify;\n    justify-content: space-between;\n  }\n\n  @media ${({ device }) => device.mobileL} {\n    .grid-column {\n      padding: 24px;\n    }\n  }\n`;","export const lightTheme = {\n    body: '#7b7b80',\n    title: '#1b1b1d',\n    button: '#707070',\n    buttonHover: 'black',\n    background: '#fafafd',\n    secondaryBackground: '#f3f3f6',\n    backgroundActive: '#e5e5ea',\n    accent: '#007aff',\n    secondaryAccent: '#c0d9f5'\n}\n\nexport const darkTheme = {\n    body: '#8D8D8D',\n    title: '#F0F2F3',\n    button: '#707070',\n    buttonHover: '#F0F2F3',\n    background: '#141414',\n    secondaryBackground: '#171717',\n    backgroundActive: '#1b1b1b',\n    accent: '#0a84ff',\n    secondaryAccent: '#152a44'\n}","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '960px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px'\n}\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`\n};","import { FaGithub, FaLinkedinIn } from 'react-icons/fa';\nimport { MdEmail } from 'react-icons/md';\nimport { IoMdDocument } from 'react-icons/io';\n\nexport const socialLinks = [\n    {\n        title: \"Github\",\n        icon: FaGithub,\n        url: \"https://github.com/OlegAba\"\n    },\n    {\n        title: \"LinkedIn\",\n        icon: FaLinkedinIn,\n        url: \"https://www.linkedin.com/in/olegabalonski/\"\n    },\n    {\n        title: \"Email\",\n        icon: MdEmail,\n        url: \"mailto:olegaba.developer@gmail.com\"\n    },\n    {\n        title: \"Resume\",\n        icon: IoMdDocument,\n        url: \"http://www.OlegAba.com/resume.pdf\"\n    }\n]\n\nexport const about = {\n    title: \"Oleg Abalonski\",\n    image: {\n        source: './images/avatar.png',\n        description: 'avatar'\n    },\n    description: `As an individual, I bring a strong skill set in technologies related \n    to Web and iOS development. Apart from utilizing several programming languages, I \n    have experience working with version control, network calls, API’s, third-party \n    libraries, frameworks, relational databases, multithreading, and an MVC & MVVM design \n    pattern. I can adapt to a fluid and dynamic development environment; I am comfortable \n    working with any computer/mobile OS and can transfer my skillset to any programming \n    language or technology that is required.`\n}\n\nexport const instaQR = {\n    title: \"InstaQR\",\n    mainImage: \"images/InstaQR/instaqr-1.png\",\n    secondaryImages: [\n        \"images/InstaQR/instaqr-2.png\", \n        \"images/InstaQR/instaqr-3.png\", \n        \"images/InstaQR/instaqr-4.png\", \n        \"images/InstaQR/instaqr-5.png\", \n        \"images/InstaQR/instaqr-6.png\", \n        \"images/InstaQR/instaqr-7.png\"\n    ],\n    about: `InstaQR generates a live wallpaper by combining an image of your choice with \n    a scannable QR code. The QR code stores your share action (any link such as a social \n    media profile) and stays hidden until the live wallpaper is activated. Simply press into \n    the screen from your lockscreen and have the person you would like to share with scan \n    the barcode from their camera app.`,\n    learned: [\n        \"Built a public Cocoapods Swift library\",\n        \"Utilized multithreading for asynchronous background tasks\",\n        \"Implemented an MVC and OOP design pattern\",\n        \"Created dynamic templates with input validation for popular shareable services\",\n        \"Setup Unit Tests using the XCTest framework\",\n        \"Distributed and beta-tested the application using Testflight\",\n        \"Built a barcode scanner with action validiation\",\n        \"Set AutoLayout programmatically to create modular and scalable views\",\n        \"Managed version control and handled code review, code fixes, and bug fixes\",\n        \"Published and actively maintaining the project on App Store Connect\",\n    ],\n    appleLink: {\n        url: \"https://apps.apple.com/us/app/instaqr-live-wallpaper-maker/id1514732973?ign-mpt=uo%3D4\",\n        image: {\n            source: \"https://linkmaker.itunes.apple.com/en-us/badge-lrg.svg?releaseDate=2019-11-16&amp;kind=iossoftware&amp;bubble=ios_apps\",\n            description: \"Download on iTunes\"\n        }\n    },\n    githubLink: {\n        title: \"Github\",\n        icon: FaGithub,\n        url: \"https://github.com/OlegAba/InstaQR\"\n    }\n}\n\nexport const projects = [\n    {\n        title: \"LPLivePhotoGenerator\",\n        image: \"images/Projects/LPLivePhotoGenerator.png\",\n        url: \"https://github.com/OlegAba/LPLivePhotoGenerator\"\n    },\n    {\n        title: \"SuperSnapcode\",\n        image: \"images/Projects/SuperSnapcode.png\",\n        url: \"https://github.com/OlegAba/SuperSnapcode\"\n    },\n    {\n        title: \"Podcast Explorer\",\n        image: \"images/Projects/PodcastExplorer.png\",\n        url: \"https://github.com/OlegAba/PodcastEpisodeExplorer\"\n    },\n    {\n        title: \"Movie Explorer\",\n        image: \"images/Projects/MovieExplorer.png\",\n        url: \"https://github.com/OlegAba/movie-explorer\"\n    },\n    {\n        title: \"Product Landing Page\",\n        image: \"images/Projects/ProductLandingPage.png\",\n        url: \"https://olegaba.github.io/FCC-Responsive-Web-Design-Projects/ProductLandingPage\"\n    },\n    {\n        title: \"Technical Documentation\",\n        image: \"images/Projects/TechnicalDocumentation.png\",\n        url: \"https://olegaba.github.io/FCC-Responsive-Web-Design-Projects/TechnicalDocumentationPage/\"\n    },\n]","import styled from 'styled-components';\n\nexport const StyledNavbar = styled.nav`\n  padding: 20px 0 20px 0;\n\n  .navbar-container {\n    display: flex;\n    height: 26px;\n    align-items: flex-start;\n\n    .nav-logo {\n      flex: 1;\n      min-width: 0;\n\n      img {\n        height: 26px;\n      }\n    }\n\n    .nav-links {\n      flex: 1;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      a {\n        margin: 0 20px;\n        text-decoration: none;\n        transition: color 0.1s linear;\n        color: ${({ theme }) => theme.button};\n\n        &:hover {\n          color: ${({ theme }) => theme.buttonHover};\n        }\n      }\n    }\n\n    .nav-toggle {\n      flex: 1;\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n    }\n\n    .nav-menu {\n      height: 100%;\n      color: ${({ theme }) => theme.title};\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledNavLink = styled.a`\n    display: flex;\n    align-items: center;\n    letter-spacing: 4px;\n    text-transform: uppercase;\n    font-size: 14px;\n\n    .navLink-icon {\n        margin-right: ${({ hasTitle }) => hasTitle ? '10px' : '0'};\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledNavLink } from './NavLink.styled';\n\nconst NavLink = ({Icon, title, ...props }) => {\n\n  const hasTitle = title === undefined ? false : true;\n\n  return (\n    <StyledNavLink hasTitle={hasTitle} {...props}>\n      <Icon className=\"navLink-icon\" size=\"20px\" />\n      {title}\n    </StyledNavLink>\n  )\n}\n\nNavLink.propTypes = {\n  Icon: PropTypes.elementType.isRequired,\n  title: PropTypes.string\n}\n\nexport default NavLink;","import styled from 'styled-components';\n\nexport const StyledNavSwitch = styled.div`\n    .checkbox {\n        opacity: 0;\n        position: absolute;\n    }\n\n    .label {\n        background-color: ${({ theme }) => theme.accent};\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border-radius: 50px;\n        position: relative;\n        padding: 5px;\n        height: 26px;\n        width: 50px;\n    }\n\n    .icon-moon {\n        color: ${({ theme }) => theme.title};\n    }\n\n    .icon-sun {\n        color: ${({ theme }) => theme.title};\n    }\n\n    .ball {\n        background-color: ${({ theme }) => theme.secondaryBackground};\n        border-radius: 50%;\n        position: absolute;\n        top: 2px;\n        left: 2px;\n        height: 22px;\n        width: 22px;\n        transition: transform 0.2s linear;\n    }\n\n    .checkbox:checked + .label .ball {\n        transform: translateX(24px);\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledNavSwitch } from './NavSwitch.styled';\nimport { BsMoon } from 'react-icons/bs';\nimport { FiSun } from 'react-icons/fi';\n\nconst NavSwitch = ({isDarkMode, onChange, ...props }) => {\n\n  return (\n    <StyledNavSwitch {...props}>\n        <input \n            type=\"checkbox\" \n            className=\"checkbox\" \n            id=\"checkbox\" \n            onChange={onChange}\n            checked={isDarkMode}\n        />\n\n        <label htmlFor=\"checkbox\" className=\"label\">\n        <FiSun className=\"icon-sun\" />\n        <BsMoon className=\"icon-moon\" />\n        <div className=\"ball\" />\n        </label>\n    </StyledNavSwitch>\n  )\n}\n\nNavSwitch.propTypes = {\n    isDarkMode: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default NavSwitch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledNavbar } from './Navbar.styled';\nimport { CgMenu } from 'react-icons/cg';\nimport NavLink from '../navLink/NavLink';\nimport NavSwitch from '../navSwitch/NavSwitch';\n\nconst Navbar = ({\n  logo,\n  links, \n  isMobile, \n  isDarkMode, \n  onSwitchChange, \n  onButtonClick, \n  ...props \n}) => {\n\n  const navLogo = (\n    <div className=\"nav-logo\">\n      <img \n        src={logo} \n        alt=\"logo\"\n      />\n    </div>\n  );\n\n  const navLinkButtons = (\n    <div className=\"nav-links\">\n      {links.map((link, index) => \n        <NavLink\n          key={index} \n          Icon={ link.icon } \n          title={ link.title } \n          href={ link.url } \n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        />\n      )}\n    </div>\n  );\n\n  const navToggle = (\n    <div className=\"nav-toggle\">\n      <NavSwitch \n        isDarkMode={isDarkMode}\n        onChange={onSwitchChange}\n      />\n    </div>\n  );\n\n  const navButton = (\n    <CgMenu \n      className=\"nav-menu\"\n      size=\"25px\"\n      onClick={onButtonClick}\n    />\n  );\n\n  const expandedNavbar = (\n    <div className=\"navbar-container\">\n      {navLogo}\n      {navLinkButtons}\n      {navToggle}\n    </div>\n  );\n\n  const compactNavbar =  (\n    <div className=\"navbar-container\">\n      {navLogo}\n      {navButton}\n    </div>\n  );\n\n  let currentNavbar = isMobile ? compactNavbar : expandedNavbar\n\n  return (\n    <StyledNavbar {...props}>\n      {currentNavbar}\n    </StyledNavbar>\n  );\n}\n\nNavbar.propTypes = {\n  logo: PropTypes.node.isRequired,\n  links: PropTypes.array.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  isDarkMode: PropTypes.bool.isRequired,\n  onSwitchChange: PropTypes.func.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n}\n\nexport default Navbar;","import styled from 'styled-components';\n\nexport const StyledMenu = styled.nav`\n  background: ${({ theme }) => theme.backgroundActive};\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n  height: 100%;\n  width: 250px;\n  position: fixed;\n  top: 0;\n  right: 0;\n  transition: transform 0.3s ease-in-out;\n  z-index: 3;\n\n  .menu-header-container {\n    padding: 20px 24px 20px 24px;\n    \n    .menu-close {\n      color: ${({ theme }) => theme.title};\n      float: right;\n    }\n  }\n\n  .menu-buttons-container {\n    margin-top: 70px;\n    display: inline-block;\n    width: 100%;\n    background-color: ${({ theme }) => theme.background};\n\n    .menu-link {\n      display: flex;\n      margin-bottom: 2px;\n      padding: 20px 0 20px 0;\n      justify-content: center;\n      background-color: ${({ theme }) => theme.backgroundActive};\n    }\n\n    a {\n      text-decoration: none;\n      transition: color 0.1s linear;  \n      height: 30px;\n      color: ${({ theme }) => theme.button};\n\n      &:hover {\n        color: ${({ theme }) => theme.buttonHover};\n      }\n    }\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledMenu } from './Menu.styled';\nimport NavLink from '../navLink/NavLink';\nimport { CgClose } from 'react-icons/cg';\nimport NavSwitch from '../navSwitch/NavSwitch';\n\nconst Menu = ({ \n  open, \n  links,\n  isDarkMode, \n  onSwitchChange,\n  onButtonClick, \n  ...props \n}) => {\n  \n  const isHidden = open ? true : false;\n\n  return (\n    <StyledMenu open={open} aria-hidden={!isHidden} {...props}>\n      <div className=\"menu-header-container\">\n        <CgClose \n          className=\"menu-close\"\n          size=\"25px\"\n          onClick={onButtonClick}\n        />\n      </div>\n\n      <div className=\"menu-buttons-container\">\n        {links.map((link, index) => \n            <div \n              className=\"menu-link\" \n              key={index}>\n              <NavLink \n                Icon={link.icon} \n                title={link.title} \n                href={link.url} \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            />\n            </div>\n         )}\n\n        <div className=\"menu-link\">\n          <NavSwitch \n            isDarkMode={isDarkMode}\n            onChange={onSwitchChange}\n          />\n        </div>\n      </div>\n    </StyledMenu>\n  )\n}\n\nMenu.propTypes = {\n  open: PropTypes.bool.isRequired,\n  links: PropTypes.array.isRequired,\n  isDarkMode: PropTypes.bool.isRequired,\n  onSwitchChange: PropTypes.func.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Component that alerts if you click outside of it\n\nexport default class OutsideAlerter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.handleClickOutside();\n    }\n  }\n\n  render() {\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\n  }\n}\n\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledAbout = styled.div`\n  .image-container img {\n    padding-left: 45px;\n    padding-right: 45px;\n    max-width: 100%;\n    width: 400px;\n  }\n\n  .info-grid {\n    margin-top: 4px;\n    display: grid;\n    -webkit-box-align: stretch;\n    -webkit-align-items: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n    grid-auto-columns: 1fr;\n    grid-column-gap: 4px;\n    grid-row-gap: 4px;\n    -ms-grid-columns: 1fr;\n    grid-template-columns: 1fr;\n    -ms-grid-rows: auto;\n    grid-template-rows: auto;\n  }\n\n  @media ${({ device }) => device.tablet} {\n    .info-grid {\n      -ms-grid-columns: 1fr;\n      grid-template-columns: 1fr;\n\n      p {\n        padding-bottom: 0;\n      }\n    }\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledAbout } from './About.styled';\n\nconst About = ({\n  about,\n  device, \n  ...props \n}) => {\n\n  return (\n    <StyledAbout device={device} {...props}>\n      <h1>{about.title}</h1>\n      <div className=\"box-section image-container\">\n        <img \n          src={about.image.source} \n          alt={about.image.title}\n        />\n      </div>\n\n      <div className=\"info-grid\">\n        <div className=\"box-section grid-column\">\n          <div>\n            <h4>About</h4>\n            <p>{about.description}</p>\n          </div>\n        </div>\n      </div>\n    </StyledAbout>\n  )\n}\n\nAbout.propTypes = {\n  about: PropTypes.object.isRequired,\n  device: PropTypes.object.isRequired,\n}\n\nexport default About;","import styled from 'styled-components';\n\nexport const StyledMainProject = styled.div`\n  .image-container img {\n    width: 70%;\n  }\n\n  .image-grid {\n    display: grid;\n    margin-top: 4px;\n    grid-auto-columns: 1fr;\n    grid-column-gap: 4px;\n    grid-row-gap: 4px;\n    -ms-grid-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n    -ms-grid-rows: auto;\n    grid-template-rows: auto;\n  }\n\n  .image-grid-col {\n    padding: 24px;\n    cursor: pointer;\n    \n    img {\n        display: block;\n        width: 100%;\n        margin-right: auto;\n        margin-left: auto;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.backgroundActive};\n    }\n  }\n\n  @media ${({ device }) => device.tablet} {\n    .image-grid {\n      -ms-grid-columns: 1fr 1fr 1fr;\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n  }\n\n  @media ${({ device }) => device.mobileL} {\n    .image-grid {\n      -ms-grid-columns: 1fr 1fr;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  .info-grid {\n    margin-top: 4px;\n    display: grid;\n    -webkit-box-align: stretch;\n    -webkit-align-items: stretch;\n    -ms-flex-align: stretch;\n    align-items: stretch;\n    grid-auto-columns: 1fr;\n    grid-column-gap: 4px;\n    grid-row-gap: 4px;\n    -ms-grid-columns: 0.5fr 1fr;\n    grid-template-columns: 0.5fr 1fr;\n    -ms-grid-rows: auto;\n    grid-template-rows: auto;\n\n    p {\n      padding-bottom: 20px;\n    }\n  }\n\n  @media ${({ device }) => device.tablet} {\n    .info-grid {\n      -ms-grid-columns: 1fr;\n      grid-template-columns: 1fr;\n\n      p {\n        padding-bottom: 0;\n      }\n    }\n  }\n\n  .button-container {\n    display: flex;\n    justify-content: center;\n  }\n\n  .button-grid {\n    display: flex;\n    justify-content: space-around;\n\n    a {\n      transition: all .1s linear;\n    }\n\n    .link-button {\n      color: ${({ theme }) => theme.accent};\n      background-color: ${({ theme }) => theme.secondaryAccent};\n      text-decoration: none;\n      padding: 10px;\n      margin-left: 20px;\n      border-radius: 5px;\n      border-style: solid;\n      border-width: 1px;\n      border-color: ${({ theme }) => theme.accent};\n      transition: all .1s linear;\n      -webkit-backface-visibility: hidden;\n      -moz-backface-visibility: hidden;\n      -ms-backface-visibility: hidden;\n\n      &:hover {\n        color: ${({ theme }) => theme.title};\n        background-color: ${({ theme }) => theme.accent};\n      }\n    }\n  }\n\n  @media ${({ device }) => device.tablet} {\n    .button-grid {\n      margin-top: 40px;\n      justify-content: center;\n    }\n  }\n\n  @media ${({ device }) => device.mobileL} {\n    .button-grid {\n      height: auto;\n      flex-direction: column;\n      justify-items: center;\n      margin-right: auto;\n      margin-left: auto;\n      margin-top: 40px;\n\n      .link-button {\n        margin-left: 0;\n        margin-top: 10px;\n        margin-bottom: 20px;\n        width: 135px;\n      }\n    }\n  }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledMainProject } from './MainProject.styled';\nimport NavLink from '../navLink/NavLink';\n\nconst MainProject = ({\n  device,\n  project,\n  handleImageClick,\n  ...props \n}) => {\n\n  const imageGrid = (\n    <div className=\"image-grid\">\n      {project.secondaryImages.map((image, index) =>\n        <div \n          key={index}\n          className=\"box-section image-grid-col\"\n          onClick={handleImageClick.bind(this, index)}\n        >\n          <img \n            src={image} \n            alt={index + \"-preview\"}\n          />\n        </div>\n      )}\n    </div>\n  );\n\n  const learnedSection = (\n    <ul>\n      {project.learned.map((text, index) => \n        <li key={index}>\n          <span>{text}</span>\n        </li>      \n      )}\n    </ul>\n  );\n\n  return (\n    <StyledMainProject device={device} {...props}>\n      <h1>{project.title}</h1>\n\n      <div className=\"box-section image-container\">\n        <img \n          src={project.mainImage} \n          alt=\"Project header\"\n        />\n      </div>\n\n      <div className=\"info-grid\">\n        <div className=\"box-section grid-column\">\n          <div>\n            <h4>About</h4>\n            <p>{project.about}</p>\n          </div>\n\n          <div className=\"button-container\">\n            <div className=\"button-grid\">\n              <a href={project.appleLink.url}>\n                <img \n                  src={project.appleLink.image.source} \n                  alt={project.appleLink.image.description} \n                />\n              </a>\n\n              <NavLink\n                className=\"link-button\" \n                Icon={project.githubLink.icon} \n                title={project.githubLink.title} \n                href={project.githubLink.url} \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"box-section grid-column\">\n          <h4>Accomplishments</h4>\n          {learnedSection}\n        </div>\n      </div>\n\n      {imageGrid}\n    </StyledMainProject>\n  )\n}\n\nMainProject.propTypes = {\n  device: PropTypes.object.isRequired,\n  project: PropTypes.object.isRequired,\n  handleImageClick: PropTypes.func.isRequired,\n}\n\nexport default MainProject;","import styled from 'styled-components';\n\nexport const StyledOtherProjects = styled.div`  \n  .projects-grid {\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-column-gap: 4px;\n    grid-row-gap: 4px;\n    -ms-grid-columns: 1fr 1fr 1fr;\n    grid-template-columns: 1fr 1fr 1fr;\n    -ms-grid-rows: auto;\n    grid-template-rows: auto;\n\n    a, a:hover, a:active, a:visited, a:focus {\n      text-decoration:none;\n    }\n\n    .projects-grid-col {\n      position: relative;\n      overflow: hidden;\n\n      &:hover {\n        background-color: ${({ theme }) => theme.backgroundActive};\n      }\n\n      .link-container {\n        padding-top: 20px;\n      }\n\n      h4 {\n          margin-top: 10px;\n          margin-bottom: 10px;\n          text-align: center;\n      }\n\n      .image-container {\n        padding: 20px 40px 0 40px;\n        margin-right: auto;\n        margin-left: auto;\n\n        img {\n          max-width: 100%;\n          height: auto;\n        }\n      }\n    }\n  }\n\n  @media ${({ device }) => device.tablet} {\n    .projects-grid {\n      -ms-grid-columns: 1fr 1fr;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media ${({ device }) => device.mobileL} {\n    .projects-grid {\n      -ms-grid-columns: 1fr;\n      grid-template-columns: 1fr;\n    }\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledOtherProjects } from './OtherProjects.styled';\n\nconst OtherProjects = ({\n  device,\n  projects,\n  ...props \n}) => {\n\n  return (\n    <StyledOtherProjects device={device} {...props}>\n        <div className=\"projects-grid\">\n          {projects.map((project, index) =>\n            <a\n              className=\"box-section projects-grid-col\"\n              href={project.url}\n              key={index}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\" \n            >\n              <div className=\"link-container\">\n                <h4>{project.title}</h4>\n                <div className=\"image-container\">\n                  <img \n                    src={project.image}\n                    alt={project.title} \n                  />\n\n                </div>\n              </div>\n            </a>\n          )}\n        </div>\n    </StyledOtherProjects>\n  )\n}\n\nOtherProjects.propTypes = {\n  device: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n}\n\nexport default OtherProjects;","import styled from 'styled-components';\n\nexport const StyledFooter = styled.footer`\n    padding: 36px 0 36px 0;\n    display: flex;\n    width: 100%;\n\n    .copyright-container {\n        flex: 1;\n        color: ${({ theme }) => theme.title};\n    }\n\n    .links-container {\n        display: flex;\n        flex: 1;\n        justify-content: flex-end;\n\n        .link {\n\n            a {\n                margin-left: 30px;\n                text-decoration: none;\n                transition: color 0.1s linear;\n                color: ${({ theme }) => theme.title};\n          \n                &:hover {\n                  color: ${({ theme }) => theme.accent};\n                }\n              }\n        }\n    }\n\n    @media ${({ device }) => device.tablet} {\n        flex-direction: column-reverse;\n\n        .copyright-container {\n            text-align: center;\n            margin-top: 20px;\n        }\n\n        .links-container {\n            justify-content: center;\n        }\n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledFooter } from './Footer.styled';\nimport NavLink from '../navLink/NavLink';\n\nconst Footer = ({\n  device,\n  copyright,\n  links,  \n  ...props \n}) => {\n\n  return (\n    <StyledFooter device={device} {...props}>\n      <div className=\"copyright-container\">\n        {copyright}\n      </div>\n\n      <div className=\"links-container\">\n        {links.map((link, index) => \n            <div \n              className=\"link\" \n              key={index}>\n\n              <NavLink \n                Icon={ link.icon } \n                href={ link.url } \n                target=\"_blank\"\n            />\n            </div>\n         )}\n      </div>\n\n    </StyledFooter>\n  )\n}\n\nFooter.propTypes = {\n  device: PropTypes.object.isRequired,\n  copyright: PropTypes.string.isRequired,\n  links: PropTypes.array.isRequired,\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\nimport { GlobalStyles } from './styles/GlobalStyles';\nimport { lightTheme, darkTheme } from './styles/Themes';\nimport { device } from './styles/Device';\nimport { socialLinks, about, instaQR, projects } from './Data';\n\nimport Navbar from './components/navbar/Navbar';\nimport Menu from './components/menu/Menu';\nimport OutsideAlterter from './components/OutsideAlerter';\nimport About from './components/about/About';\nimport MainProject from './components/mainProject/MainProject';\nimport OtherProjects from './components/otherProjects/OtherProjects';\nimport Footer from './components/footer/Footer';\n\n// TODO: - https://flaviocopes.com/javascript-detect-dark-mode/\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMobile: false,\n      isDarkMode: true,\n      menuOpen: false,\n      imageDisplayOpen: false,\n      imageIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.updateWidth();\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  updateWidth = () => {\n    let windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 0;\n    let isMobile = windowWidth < 960;\n    let menuOpen = isMobile ? this.state.menuOpen : false\n    this.setState({ isMobile, menuOpen });\n  }\n\n  handleThemeSwitch = (event) => {\n    let isDarkMode = event.target.checked;\n    this.setState({ isDarkMode });\n  }\n\n  handleMenuButton = (event) => {\n    let menuNotOpen = !this.state.menuOpen;\n    if (menuNotOpen) {\n      this.setState({ menuOpen: true });\n    }\n  }\n\n  handleCloseButton = (event) => {\n    let menuOpen = this.state.menuOpen;\n    if (menuOpen) {\n      this.setState({ menuOpen: false });\n    }\n  }\n\n  handleClickOutside = () => {\n    let menuOpen = this.state.menuOpen\n    if (menuOpen) { this.setState({ menuOpen: false }) };\n  }\n\n  handleImageClick = (index) => {\n    this.setState({\n      imageDisplayOpen: true,\n      imageIndex: index\n    })\n  }\n\n  render() {\n    const theme = this.state.isDarkMode ? darkTheme : lightTheme;\n    const logo = this.state.isDarkMode ? 'images/logo-light.png' : 'images/logo-dark.png';\n    const { imageDisplayOpen, imageIndex } = this.state;\n    const images = instaQR.secondaryImages\n    \n    return (\n      <ThemeProvider theme={theme}>\n        <>\n        <GlobalStyles device={device} />\n          <div className=\"max-width-container\">\n            <Navbar\n              logo={logo}\n              links={socialLinks}\n              isMobile={this.state.isMobile}\n              isDarkMode={this.state.isDarkMode} \n              onSwitchChange={this.handleThemeSwitch}\n              onButtonClick={this.handleMenuButton}\n            />\n\n            <OutsideAlterter handleClickOutside={this.handleClickOutside}>\n              <Menu \n                open={this.state.menuOpen}\n                links={socialLinks}\n                isDarkMode={this.state.isDarkMode} \n                onSwitchChange={this.handleThemeSwitch}\n                onButtonClick={this.handleCloseButton}\n              />\n            </OutsideAlterter>\n\n            <div className=\"section-container\">\n              <About \n                about={about}\n                device={device}\n              />\n            </div>\n\n            <div className=\"section-container\">\n              <MainProject\n                device={device}\n                project={instaQR}\n                handleImageClick={this.handleImageClick}\n              />\n            </div>\n\n            <div className=\"projects-container\">\n              <OtherProjects\n                device={device}\n                projects={projects}\n              />\n            </div>\n\n            <div className=\"footer-container\">\n              <Footer\n                device={device} \n                copyright=\"© 2020 Oleg Abalonski - All rights reserved\"\n                links={socialLinks}\n              />\n            </div>\n          </div>\n\n          {imageDisplayOpen && (\n            <Lightbox\n              mainSrc={images[imageIndex]}\n              nextSrc={images[(imageIndex + 1) % images.length]}\n              prevSrc={images[(imageIndex + images.length - 1) % images.length]}\n              onCloseRequest={() => this.setState({ imageDisplayOpen: false })}\n              onMovePrevRequest={() =>\n                this.setState({\n                  imageIndex: (imageIndex + images.length - 1) % images.length,\n                })\n              }\n              onMoveNextRequest={() =>\n                this.setState({\n                  imageIndex: (imageIndex + 1) % images.length,\n                })\n              }\n            />\n          )}\n        </>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}